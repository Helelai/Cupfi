{"version":3,"file":"FilePreviewActions.js","sourceRoot":"../../../../../src","sources":["components/FilePreview/FilePreviewActions/FilePreviewActions.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport {EllipsisVertical} from '@gravity-ui/icons';\n\nimport {useUniqId} from '../../../hooks/useUniqId';\nimport {ActionTooltip} from '../../ActionTooltip';\nimport {Button} from '../../Button';\nimport type {ButtonButtonProps, ButtonLinkProps} from '../../Button';\nimport {Icon} from '../../Icon';\nimport {List} from '../../List';\nimport type {ListProps} from '../../List';\nimport {Sheet} from '../../Sheet';\nimport {Text} from '../../Text';\nimport {useMobile} from '../../mobile';\nimport {block} from '../../utils/cn';\nimport type {FilePreviewActionProps} from '../types';\n\nimport './FilePreviewActions.scss';\n\nconst cn = block('file-preview-actions');\n\nexport interface FilePreviewActionsProps {\n    actions?: FilePreviewActionProps[];\n    hoverabelPanelClassName: string;\n    fileName: string;\n    isCustomImage?: boolean;\n}\n\nconst renderListItem = (item: FilePreviewActionProps) => {\n    return (\n        <div className={cn('mobile-list-item')}>\n            {item.icon}\n            <Text variant=\"body-2\" title={item.title} ellipsis>\n                {item.title}\n            </Text>\n        </div>\n    );\n};\n\nexport const FilePreviewActions = ({\n    actions,\n    fileName,\n    hoverabelPanelClassName,\n    isCustomImage,\n}: FilePreviewActionsProps) => {\n    const id = useUniqId();\n    const mobile = useMobile();\n\n    const [showMobileMenu, setShowMobileMenu] = React.useState(false);\n\n    const handleMobileMenuClose = React.useCallback(() => {\n        setShowMobileMenu(false);\n    }, []);\n\n    const handleItemClick = React.useCallback<\n        NonNullable<ListProps<FilePreviewActionProps>['onItemClick']>\n    >((item, _, __, event) => {\n        if (event) {\n            // function can be called only on a mobile device\n            item.onClick?.(event as React.MouseEvent<HTMLDivElement, MouseEvent>);\n        }\n        setShowMobileMenu(false);\n    }, []);\n\n    if (!actions?.length) {\n        return null;\n    }\n\n    const handleMobileButtonClick = () => {\n        setShowMobileMenu(true);\n    };\n\n    if (mobile) {\n        const buttonView = isCustomImage ? 'raised' : 'flat';\n\n        return (\n            <React.Fragment>\n                <Button\n                    view={buttonView}\n                    className={cn('mobile-actions-menu')}\n                    onClick={handleMobileButtonClick}\n                    size=\"s\"\n                >\n                    <Icon data={EllipsisVertical} height={16} width={16} />\n                </Button>\n                <Sheet\n                    className={cn('mobile-sheet')}\n                    visible={showMobileMenu}\n                    onClose={handleMobileMenuClose}\n                    title={fileName}\n                >\n                    <List\n                        items={actions}\n                        filterable={false}\n                        renderItem={renderListItem}\n                        itemHeight={44}\n                        virtualized={false}\n                        onItemClick={handleItemClick}\n                    />\n                </Sheet>\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <div className={cn('desktop-actions', hoverabelPanelClassName)}>\n            {actions.map(({title, icon, onClick, disabled, tooltipExtraProps, ...props}, index) => {\n                const extraProps: ButtonLinkProps | ButtonButtonProps | undefined = props.href\n                    ? {...(props.extraProps as ButtonLinkProps), href: props.href}\n                    : props.extraProps;\n                return (\n                    <ActionTooltip key={`${id}-${index}`} title={title} {...tooltipExtraProps}>\n                        <Button\n                            onClick={onClick}\n                            aria-describedby={`${id}-${index}`}\n                            view=\"raised\"\n                            pin=\"circle-circle\"\n                            disabled={disabled}\n                            size=\"s\"\n                            className={cn('desktop-action-button')}\n                            aria-label={title}\n                            {...extraProps}\n                        >\n                            <div className={cn('action-icon-wrapper')}>{icon}</div>\n                        </Button>\n                    </ActionTooltip>\n                );\n            })}\n        </div>\n    );\n};\n"]}