{"version":3,"file":"useTabPanel.js","sourceRoot":"../../../../../src","sources":["components/tabs/hooks/useTabPanel.ts"],"names":[],"mappings":";;AAOA,kCAuBC;;AA9BD,qDAA+B;AAE/B,kEAA0D;AAC1D,+CAAuC;AACvC,0DAAkD;AAGlD,SAAgB,WAAW,CAAC,aAA4B;IACpD,MAAM,eAAe,GAAG,KAAK,CAAC,UAAU,CAAC,uBAAU,CAAC,CAAC;IAErD,IAAI,CAAC,eAAe,EAAE,CAAC;QACnB,MAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC,CAAC;IACpE,CAAC;IAED,MAAM,YAAY,GAAG,eAAe,CAAC,KAAK,CAAC;IAC3C,MAAM,QAAQ,GAAG,eAAe,CAAC,EAAE,CAAC;IACpC,MAAM,KAAK,GAAG,GAAG,QAAQ,MAAM,aAAa,CAAC,KAAK,EAAE,CAAC;IACrD,MAAM,OAAO,GAAG,GAAG,QAAQ,MAAM,aAAa,CAAC,KAAK,EAAE,CAAC;IAEvD,MAAM,UAAU,GAAG,YAAY,KAAK,aAAa,CAAC,KAAK,CAAC;IAExD,OAAO;QACH,IAAI,EAAE,UAAU;QAChB,iBAAiB,EAAE,KAAK;QACxB,EAAE,EAAE,OAAO;QACX,KAAK,EAAE,aAAa,CAAC,KAAK;QAC1B,SAAS,EAAE,IAAA,qBAAS,EAAC,EAAC,MAAM,EAAE,CAAC,UAAU,EAAC,EAAE,aAAa,CAAC,SAAS,CAAC;QACpE,SAAS,EAAE,aAAa,CAAC,EAAE;QAC3B,GAAG,IAAA,+BAAc,EAAC,aAAa,EAAE,EAAC,SAAS,EAAE,IAAI,EAAC,CAAC;KACtD,CAAC;AACN,CAAC","sourcesContent":["import * as React from 'react';\n\nimport {filterDOMProps} from '../../utils/filterDOMProps';\nimport {bTabPanel} from '../constants';\nimport {TabContext} from '../contexts/TabContext';\nimport type {TabPanelProps} from '../types';\n\nexport function useTabPanel(tabPanelProps: TabPanelProps) {\n    const tabContextProps = React.useContext(TabContext);\n\n    if (!tabContextProps) {\n        throw new Error('<TabPanel> must be used within <TabProvider>');\n    }\n\n    const currentValue = tabContextProps.value;\n    const parentId = tabContextProps.id;\n    const tabId = `${parentId}:t:${tabPanelProps.value}`;\n    const panelId = `${parentId}:p:${tabPanelProps.value}`;\n\n    const isSelected = currentValue === tabPanelProps.value;\n\n    return {\n        role: 'tabpanel',\n        'aria-labelledby': tabId,\n        id: panelId,\n        style: tabPanelProps.style,\n        className: bTabPanel({hidden: !isSelected}, tabPanelProps.className),\n        'data-qa': tabPanelProps.qa,\n        ...filterDOMProps(tabPanelProps, {labelable: true}),\n    };\n}\n"]}