{"version":3,"file":"Tab.js","sourceRoot":"../../../../src","sources":["components/tabs/Tab.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;AAEb,qDAA+B;AAE/B,6CAA+B;AAE/B,8CAAiC;AACjC,8CAAsC;AAGtC,qBAAoB;AAEP,QAAA,GAAG,GAAG,KAAK,CAAC,UAAU,CAC/B,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE;IACX,MAAM,QAAQ,GAAG,IAAA,eAAM,EAAC,KAAK,CAAC,CAAC;IAE/B,MAAM,OAAO,GAAG,CACZ,iCAAK,SAAS,EAAE,IAAA,gBAAI,EAAC,SAAS,CAAC,aAC1B,KAAK,CAAC,IAAI,IAAI,gCAAK,SAAS,EAAE,IAAA,gBAAI,EAAC,MAAM,CAAC,YAAG,KAAK,CAAC,IAAI,GAAO,EAC/D,gCAAK,SAAS,EAAE,IAAA,gBAAI,EAAC,OAAO,CAAC,YAAG,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,KAAK,GAAO,EACnE,KAAK,CAAC,OAAO,KAAK,SAAS,IAAI,CAC5B,gCAAK,SAAS,EAAE,IAAA,gBAAI,EAAC,SAAS,CAAC,YAAG,KAAK,CAAC,OAAO,GAAO,CACzD,EACA,KAAK,CAAC,KAAK,IAAI,CACZ,uBAAC,aAAK,IAAC,SAAS,EAAE,IAAA,gBAAI,EAAC,OAAO,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,KAAK,YACpD,KAAK,CAAC,KAAK,CAAC,OAAO,GAChB,CACX,IACC,CACT,CAAC;IAEF,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC;QACb,OAAO,CACH,iCAAO,QAAQ,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,GAAmC,YACtE,OAAO,GACR,CACP,CAAC;IACN,CAAC;IAED,OAAO,CACH,sCAAY,QAAQ,EAAE,IAAI,EAAC,QAAQ,EAAC,GAAG,EAAE,GAAmC,YACvE,OAAO,GACH,CACZ,CAAC;AACN,CAAC,CACJ,CAAC;AAEF,WAAG,CAAC,WAAW,GAAG,KAAK,CAAC","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport {Label} from '../Label';\n\nimport {bTab} from './constants';\nimport {useTab} from './hooks/useTab';\nimport type {TabProps} from './types';\n\nimport './Tab.scss';\n\nexport const Tab = React.forwardRef<HTMLAnchorElement | HTMLButtonElement, TabProps>(\n    (props, ref) => {\n        const tabProps = useTab(props);\n\n        const content = (\n            <div className={bTab('content')}>\n                {props.icon && <div className={bTab('icon')}>{props.icon}</div>}\n                <div className={bTab('title')}>{props.children || props.value}</div>\n                {props.counter !== undefined && (\n                    <div className={bTab('counter')}>{props.counter}</div>\n                )}\n                {props.label && (\n                    <Label className={bTab('label')} theme={props.label.theme}>\n                        {props.label.content}\n                    </Label>\n                )}\n            </div>\n        );\n\n        if (props.href) {\n            return (\n                <a {...tabProps} href={props.href} ref={ref as React.Ref<HTMLAnchorElement>}>\n                    {content}\n                </a>\n            );\n        }\n\n        return (\n            <button {...tabProps} type=\"button\" ref={ref as React.Ref<HTMLButtonElement>}>\n                {content}\n            </button>\n        );\n    },\n);\n\nTab.displayName = 'Tab';\n"]}