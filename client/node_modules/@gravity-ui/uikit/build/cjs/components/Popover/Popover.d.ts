import * as React from 'react';
import type { PopupProps } from "../Popup/index.js";
import type { AriaLabelingProps, DOMProps, QAProps } from "../types.js";
export interface PopoverProps extends AriaLabelingProps, QAProps, DOMProps, Pick<PopupProps, 'strategy' | 'placement' | 'offset' | 'keepMounted' | 'hasArrow' | 'modal' | 'initialFocus' | 'returnFocus' | 'disableVisuallyHiddenDismiss'> {
    children: ((props: Record<string, unknown>, ref: React.Ref<HTMLElement>) => React.ReactElement) | React.ReactElement;
    open?: boolean;
    onOpenChange?: (open: boolean) => void;
    disabled?: boolean;
    content?: React.ReactNode;
    trigger?: 'click';
    openDelay?: number;
    closeDelay?: number;
    enableSafePolygon?: boolean;
}
export declare function Popover({ children, open, onOpenChange, disabled, content, trigger, modal, openDelay, closeDelay, enableSafePolygon, className, ...restProps }: PopoverProps): import("react/jsx-runtime").JSX.Element;
