{"version":3,"file":"utils.js","sourceRoot":"../../../../src","sources":["components/Slider/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import type {SliderProps as RcSliderProps} from 'rc-slider';\n\nimport {CLEAR_MARK_STYLE} from './constants';\nimport type {SliderInnerState, SliderProps} from './types';\n\nfunction prepareSingleValue({value, min, max}: {value?: number; min: number; max: number}) {\n    if (typeof value === 'undefined' || value < min) {\n        return min;\n    } else if (value > max) {\n        return max;\n    }\n\n    return value;\n}\n\nfunction prepareArrayValue({\n    value = [],\n    min = 0,\n    max = 100,\n}: {\n    min?: number;\n    max?: number;\n    value?: number[];\n}) {\n    return [\n        prepareSingleValue({max, min, value: value[0]}),\n        prepareSingleValue({max, min, value: value[1]}),\n    ].sort((v1, v2) => v1 - v2) as [number, number];\n}\n\nfunction calculateMarksArray({count = 0, max, min}: {min: number; max: number; count?: number}) {\n    if (!count) {\n        return [];\n    }\n    if (max === min) {\n        return [min];\n    }\n\n    if (count === 1) {\n        const step = Math.abs(max - min) / 2;\n        return [Math.round((min + step) * 100) / 100];\n    }\n    if (count > 2) {\n        const points = [];\n        const step = Math.abs(max - min) / (count - 1);\n\n        for (let i = 0; i < count; i++) {\n            points.push(Math.round((min + step * i) * 100) / 100);\n        }\n        return points;\n    }\n    return [min, max];\n}\n\nfunction createMarks({\n    points,\n    markFormat,\n    min,\n    max,\n}: {\n    points: number[];\n    markFormat?: SliderProps['markFormat'];\n    min: number;\n    max: number;\n}): RcSliderProps['marks'] {\n    const marks: RcSliderProps['marks'] = {};\n\n    points.forEach((point) => {\n        const pointContent = markFormat ? markFormat(point) : point;\n        if (point === min || point === max) {\n            marks[point] = {label: pointContent, style: CLEAR_MARK_STYLE};\n        } else {\n            marks[point] = pointContent;\n        }\n    });\n\n    return marks;\n}\n\n/**\n * Calculates the basic properties of the Slider component depending on the passed parameters\n * @returns {SliderInnerState} Properties to pass to the Slider\n */\nexport function prepareSliderInnerState({\n    max = 100,\n    min = 0,\n    defaultValue,\n    step,\n    value,\n    markFormat,\n    marks,\n    tooltipDisplay,\n    tooltipFormat,\n}: {\n    max: number;\n    min: number;\n} & Pick<\n    SliderProps,\n    'defaultValue' | 'step' | 'value' | 'markFormat' | 'marks' | 'tooltipDisplay' | 'tooltipFormat'\n>): SliderInnerState {\n    const state: SliderInnerState = {\n        value,\n        defaultValue,\n        range: false,\n        max,\n        min,\n        step,\n        tooltipDisplay,\n    };\n\n    state.tooltipFormat = tooltipFormat ? tooltipFormat : markFormat;\n\n    if (max < min) {\n        state.max = min;\n        state.min = max;\n    }\n    if (Array.isArray(marks)) {\n        state.marks = createMarks({points: marks, markFormat, min: state.min, max: state.max});\n    } else {\n        state.marks =\n            marks === 0\n                ? {}\n                : createMarks({\n                      points: calculateMarksArray({count: marks, max, min}),\n                      markFormat,\n                      min,\n                      max,\n                  });\n    }\n\n    if (value === undefined) {\n        const isArray = Array.isArray(defaultValue);\n        state.range = isArray;\n        state.defaultValue = isArray\n            ? prepareArrayValue({\n                  min: state.min,\n                  max: state.max,\n                  value: defaultValue,\n              })\n            : prepareSingleValue({\n                  min: state.min,\n                  max: state.max,\n                  value: defaultValue,\n              });\n    } else {\n        const isArray = Array.isArray(value);\n        state.range = isArray;\n        state.value = isArray\n            ? prepareArrayValue({min: state.min, max: state.max, value})\n            : prepareSingleValue({min: state.min, max: state.max, value});\n    }\n\n    return state;\n}\n"]}