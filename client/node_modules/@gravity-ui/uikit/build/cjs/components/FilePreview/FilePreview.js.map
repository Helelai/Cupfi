{"version":3,"file":"FilePreview.js","sourceRoot":"../../../../src","sources":["components/FilePreview/FilePreview.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport {\n    FileZipper as ArchiveIcon,\n    Code as CodeIcon,\n    FileQuestion as DefaultIcon,\n    Picture as ImageIcon,\n    MusicNote as MusicIcon,\n    LogoAcrobat as PdfIcon,\n    LayoutHeaderCellsLarge as TableIcon,\n    TextAlignLeft as TextIcon,\n    Filmstrip as VideoIcon,\n} from '@gravity-ui/icons';\n\nimport {useActionHandlers} from '../../hooks';\nimport {Icon} from '../Icon';\nimport type {IconData} from '../Icon';\nimport {Text} from '../Text';\nimport {useMobile} from '../mobile';\nimport type {QAProps} from '../types';\nimport {block} from '../utils/cn';\n\nimport {FilePreviewActions} from './FilePreviewActions/FilePreviewActions';\nimport type {FilePreviewActionProps, FileType} from './types';\nimport {getFileType} from './utils';\n\nimport './FilePreview.scss';\n\nconst cn = block('file-preview');\n\nconst FILE_ICON: Record<FileType, IconData> = {\n    default: DefaultIcon,\n    image: ImageIcon,\n    video: VideoIcon,\n    code: CodeIcon,\n    archive: ArchiveIcon,\n    audio: MusicIcon,\n    music: MusicIcon,\n    text: TextIcon,\n    pdf: PdfIcon,\n    table: TableIcon,\n};\n\nexport interface FilePreviewProps extends QAProps {\n    className?: string;\n\n    file: File;\n    imageSrc?: string;\n    description?: string;\n\n    onClick?: React.MouseEventHandler<HTMLDivElement>;\n    actions?: FilePreviewActionProps[];\n}\n\nexport function FilePreview({\n    className,\n    qa,\n    file,\n    imageSrc,\n    description,\n    onClick,\n    actions,\n}: FilePreviewProps) {\n    const [previewSrc, setPreviewSrc] = React.useState<string | undefined>(imageSrc);\n    const type = getFileType(file);\n\n    const mobile = useMobile();\n\n    const {onKeyDown} = useActionHandlers(onClick);\n\n    React.useEffect(() => {\n        if (imageSrc || type !== 'image') return undefined;\n\n        try {\n            const createdUrl = URL.createObjectURL(file);\n\n            setPreviewSrc(createdUrl);\n\n            return () => {\n                URL.revokeObjectURL(createdUrl);\n            };\n        } catch {\n            return undefined;\n        }\n    }, [file, imageSrc, type]);\n\n    const clickable = Boolean(onClick);\n    const withActions = Boolean(actions?.length);\n\n    const isPreviewString = typeof previewSrc === 'string';\n\n    return (\n        <div className={cn({mobile}, className)} data-qa={qa}>\n            <div\n                className={cn('card', {clickable, hoverable: clickable || withActions})}\n                role={clickable ? 'button' : undefined}\n                onKeyDown={clickable ? onKeyDown : undefined}\n                tabIndex={clickable ? 0 : undefined}\n                onClick={onClick}\n            >\n                {isPreviewString ? (\n                    <div className={cn('image-container')}>\n                        <img className={cn('image')} src={previewSrc} alt={file.name} />\n                    </div>\n                ) : (\n                    <div className={cn('icon-container')}>\n                        <div className={cn('icon', {type})}>\n                            <Icon className={cn('icon-svg')} data={FILE_ICON[type]} size={20} />\n                        </div>\n                    </div>\n                )}\n                <Text className={cn('name')} color=\"secondary\" ellipsis title={file.name}>\n                    {file.name}\n                </Text>\n                {Boolean(description) && (\n                    <Text\n                        className={cn('description')}\n                        color=\"secondary\"\n                        ellipsis\n                        title={description}\n                    >\n                        {description}\n                    </Text>\n                )}\n            </div>\n            <FilePreviewActions\n                actions={actions}\n                hoverabelPanelClassName={cn('actions-panel')}\n                fileName={file.name}\n                isCustomImage={isPreviewString}\n            />\n        </div>\n    );\n}\n\nFilePreview.displayName = 'FilePreview';\n"]}