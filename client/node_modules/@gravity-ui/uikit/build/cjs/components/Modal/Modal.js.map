{"version":3,"file":"Modal.js","sourceRoot":"../../../../src","sources":["components/Modal/Modal.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport {\n    FloatingFocusManager,\n    FloatingOverlay,\n    useDismiss,\n    useFloating,\n    useInteractions,\n    useRole,\n    useTransitionStatus,\n} from '@floating-ui/react';\nimport type {\n    FloatingFocusManagerProps,\n    OpenChangeReason,\n    UseFloatingOptions,\n} from '@floating-ui/react';\nimport {isTabbable} from 'tabbable';\n\nimport {KeyCode} from '../../constants';\nimport {useForkRef} from '../../hooks';\nimport {usePrevious} from '../../hooks/private';\nimport {Portal} from '../Portal';\nimport type {AriaLabelingProps, DOMProps, QAProps} from '../types';\nimport {block} from '../utils/cn';\nimport {filterDOMProps} from '../utils/filterDOMProps';\nimport {useLayer} from '../utils/layer-manager';\n\nimport i18n from './i18n';\n\nimport './Modal.scss';\n\nexport type ModalCloseReason = 'outsideClick' | 'escapeKeyDown';\n\nexport interface ModalProps extends DOMProps, AriaLabelingProps, QAProps {\n    open?: boolean;\n    /** Callback for open state changes, when dismiss happens for example */\n    onOpenChange?: (open: boolean, event?: Event, reason?: OpenChangeReason) => void;\n    keepMounted?: boolean;\n    disableBodyScrollLock?: boolean;\n    /**\n     * FloatingFocusManager `initialFocus` property\n     */\n    initialFocus?: FloatingFocusManagerProps['initialFocus'];\n    /**\n     * FloatingFocusManager `returnFocus` property\n     */\n    returnFocus?: FloatingFocusManagerProps['returnFocus'];\n\n    /** Do not add a11y dismiss buttons when managing focus */\n    disableVisuallyHiddenDismiss?: boolean;\n\n    children?: React.ReactNode;\n    /**\n     * This callback will be called when Escape key pressed on keyboard, or click outside was made\n     * This behaviour could be disabled with `disableEscapeKeyDown`\n     * and `disableOutsideClick` options\n     *\n     * @deprecated Use `onOpenChange` instead\n     */\n    onClose?: (event: MouseEvent | KeyboardEvent, reason: ModalCloseReason) => void;\n    /**\n     * This callback will be called when Escape key pressed on keyboard\n     * This behaviour could be disabled with `disableEscapeKeyDown` option\n     *\n     * @deprecated Use `onOpenChange` instead\n     */\n    onEscapeKeyDown?: (event: KeyboardEvent) => void;\n    /**\n     * This callback will be called when Enter key is pressed on keyboard\n     *\n     * @deprecated It is not recommended to use this callback.\n     * Consider using the submit event in case of a form content or using initialFocus property on the confirm button in case of non-interactive content\n     */\n    onEnterKeyDown?: (event: KeyboardEvent) => void;\n    /**\n     * This callback will be called when click is outside of elements of \"top layer\"\n     * This behaviour could be disabled with `disableOutsideClick` option\n     *\n     * @deprecated Use `onOpenChange` instead\n     */\n    onOutsideClick?: (event: MouseEvent) => void;\n    /** Do not dismiss on escape key press */\n    disableEscapeKeyDown?: boolean;\n    /** Do not dismiss on outside click */\n    disableOutsideClick?: boolean;\n    container?: HTMLElement;\n    contentClassName?: string;\n    /** Callback called when `Modal` is opened and \"in\" transition is started */\n    onTransitionIn?: () => void;\n    /** Callback called when `Modal` is opened and \"in\" transition is completed */\n    onTransitionInComplete?: () => void;\n    /** Callback called when `Modal` is closed and \"out\" transition is started */\n    onTransitionOut?: () => void;\n    /** Callback called when `Popup` is closed and \"out\" transition is completed */\n    onTransitionOutComplete?: () => void;\n    contentOverflow?: 'visible' | 'auto';\n\n    floatingRef?: React.RefObject<HTMLDivElement>;\n}\n\nconst b = block('modal');\n\nconst TRANSITION_DURATION = 150;\n\nexport function Modal({\n    open = false,\n    onOpenChange,\n    keepMounted = false,\n    disableBodyScrollLock = false,\n    disableEscapeKeyDown,\n    disableOutsideClick,\n    initialFocus,\n    returnFocus,\n    disableVisuallyHiddenDismiss,\n    onEscapeKeyDown,\n    onOutsideClick,\n    onClose,\n    onEnterKeyDown,\n    onTransitionIn,\n    onTransitionInComplete,\n    onTransitionOut,\n    onTransitionOutComplete,\n    children,\n    style,\n    contentOverflow = 'visible',\n    className,\n    contentClassName,\n    container,\n    qa,\n    floatingRef,\n    ...restProps\n}: ModalProps) {\n    useLayer({open, type: 'modal'});\n\n    const handleOpenChange = React.useCallback<NonNullable<UseFloatingOptions['onOpenChange']>>(\n        (isOpen, event, reason) => {\n            onOpenChange?.(isOpen, event, reason);\n\n            if (isOpen || !event) {\n                return;\n            }\n\n            const closeReason = reason === 'escape-key' ? 'escapeKeyDown' : 'outsideClick';\n\n            if (closeReason === 'escapeKeyDown' && onEscapeKeyDown) {\n                onEscapeKeyDown(event as KeyboardEvent);\n            }\n\n            if (closeReason === 'outsideClick' && onOutsideClick) {\n                onOutsideClick(event as MouseEvent);\n            }\n\n            onClose?.(event as KeyboardEvent | MouseEvent, closeReason);\n        },\n        [onOpenChange, onEscapeKeyDown, onOutsideClick, onClose],\n    );\n\n    const {refs, elements, context} = useFloating({\n        open,\n        onOpenChange: handleOpenChange,\n    });\n\n    const initialFocusRef = React.useRef<HTMLDivElement>(null);\n    const handleFloatingRef = useForkRef<HTMLDivElement>(\n        refs.setFloating,\n        initialFocusRef,\n        floatingRef,\n    );\n\n    const dismiss = useDismiss(context, {\n        enabled: !disableOutsideClick || !disableEscapeKeyDown,\n        outsidePress: !disableOutsideClick,\n        escapeKey: !disableEscapeKeyDown,\n    });\n\n    const role = useRole(context, {role: 'dialog'});\n\n    const {getFloatingProps} = useInteractions([dismiss, role]);\n\n    const {isMounted, status} = useTransitionStatus(context, {duration: TRANSITION_DURATION});\n    const previousStatus = usePrevious(status);\n\n    React.useEffect(() => {\n        if (status === 'initial' && previousStatus === 'unmounted') {\n            onTransitionIn?.();\n        }\n        if (status === 'close' && previousStatus === 'open') {\n            onTransitionOut?.();\n        }\n        if (status === 'unmounted' && previousStatus === 'close') {\n            onTransitionOutComplete?.();\n        }\n    }, [previousStatus, status, onTransitionIn, onTransitionOut, onTransitionOutComplete]);\n\n    const handleTransitionEnd = React.useCallback(\n        (event: React.TransitionEvent) => {\n            // There are two simultaneous transitions running at the same time\n            // Use specific name to only notify once\n            if (\n                status === 'open' &&\n                event.propertyName === 'transform' &&\n                event.target === elements.floating\n            ) {\n                onTransitionInComplete?.();\n            }\n        },\n        [status, onTransitionInComplete, elements.floating],\n    );\n\n    const handleKeyDown = React.useCallback(\n        (event: React.KeyboardEvent) => {\n            if (!onEnterKeyDown || event.key !== KeyCode.ENTER || event.defaultPrevented) {\n                return;\n            }\n\n            const floatingElement = elements.floating;\n            if (!floatingElement) {\n                return;\n            }\n            const pathElements = event.nativeEvent.composedPath();\n            const index = pathElements.indexOf(floatingElement);\n\n            const nestedElements = index < 0 ? pathElements : pathElements.slice(0, index);\n            const nestedFloatingElementIndex = nestedElements.findIndex((el) =>\n                (el as Element)?.hasAttribute('data-floating-ui-focusable'),\n            );\n\n            if (nestedFloatingElementIndex < 0) {\n                onEnterKeyDown(event.nativeEvent);\n                return;\n            }\n\n            const hasInnerTabbableElements = nestedElements\n                .slice(0, nestedFloatingElementIndex)\n                .some((el) => isTabbable(el as Element));\n\n            if (!hasInnerTabbableElements) {\n                onEnterKeyDown(event.nativeEvent);\n            }\n        },\n        [elements.floating, onEnterKeyDown],\n    );\n\n    return isMounted || keepMounted ? (\n        <Portal container={container}>\n            <FloatingOverlay\n                style={style}\n                className={b({open}, className)}\n                data-qa={qa}\n                data-floating-ui-status={status}\n                lockScroll={!disableBodyScrollLock}\n            >\n                <div className={b('content-aligner')}>\n                    <div className={b('content-wrapper')}>\n                        <FloatingFocusManager\n                            context={context}\n                            disabled={!isMounted}\n                            modal={isMounted}\n                            initialFocus={initialFocus ?? initialFocusRef}\n                            returnFocus={returnFocus}\n                            visuallyHiddenDismiss={\n                                disableVisuallyHiddenDismiss ? false : i18n('close')\n                            }\n                            restoreFocus={true}\n                        >\n                            <div\n                                {...filterDOMProps(restProps, {labelable: true})}\n                                className={b(\n                                    'content',\n                                    {'has-scroll': contentOverflow === 'auto'},\n                                    contentClassName,\n                                )}\n                                ref={handleFloatingRef}\n                                {...getFloatingProps({\n                                    onTransitionEnd: handleTransitionEnd,\n                                    onKeyDown: handleKeyDown,\n                                })}\n                            >\n                                {children}\n                            </div>\n                        </FloatingFocusManager>\n                    </div>\n                </div>\n            </FloatingOverlay>\n        </Portal>\n    ) : null;\n}\n"]}