{"version":3,"file":"index.js","sourceRoot":"../../../../../src","sources":["components/layout/utils/index.ts"],"names":[],"mappings":";;;AAAA,+CAAgD;AAGhD,MAAM,YAAY,GAAuB;IACrC,CAAC,EAAE,CAAC;IACJ,CAAC,EAAE,CAAC;IACJ,CAAC,EAAE,CAAC;IACJ,EAAE,EAAE,CAAC;IACL,GAAG,EAAE,CAAC;IACN,IAAI,EAAE,CAAC;CACV,CAAC;AAEK,MAAM,oBAAoB,GAC7B,CAAC,UAAqB,EAAiB,EAAE,CACzC,CAAC,OAAO,EAAE,EAAE;IACR,OAAO,UAAU,IAAI,YAAY;QAC7B,CAAC,CAAC,YAAY,CAAC,UAAuB,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC;QACpE,CAAC,CAAC,KAAK,CAAC;AAChB,CAAC,CAAC;AANO,QAAA,oBAAoB,wBAM3B;AAEN,MAAM,UAAU,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,CAAU,CAAC;AAE1D,MAAM,2BAA2B,GACpC,CAAC,aAAwB,EAAE,EAAE,CAC7B,CAAI,SAA0B,EAAE,EAAiB,EAAE;IAC/C,IAAI,CAAC,aAAa,EAAE,CAAC;QACjB,OAAO,SAAS,CAAC;IACrB,CAAC;IAED,IAAI,SAAS,GAAG,aAAa,CAAC;IAE9B,OAAO,SAAS,EAAE,CAAC;QACf,IAAI,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC;YACpB,OAAO,MAAM,CAAC,SAAS,CAAC,CAAC;QAC7B,CAAC;QAED,SAAS,GAAG,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,OAAO,SAAS,CAAC;AACrB,CAAC,CAAC;AAlBO,QAAA,2BAA2B,+BAkBlC;AAEC,MAAM,UAAU,GAAG,CAAC,KAAsB,EAAU,EAAE;IACzD,OAAO,KAAK,IAAI,8BAAkB,CAAC,CAAC,CAAC,8BAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACnF,CAAC,CAAC;AAFW,QAAA,UAAU,cAErB","sourcesContent":["import {CSS_SIZE_EXCEPTION} from '../constants';\nimport type {ColSize, IsMediaActive, MediaPartial, MediaProps, MediaType, Space} from '../types';\n\nconst mediaByOrder: MediaProps<number> = {\n    s: 0,\n    m: 1,\n    l: 2,\n    xl: 3,\n    xxl: 4,\n    xxxl: 5,\n};\n\nexport const isMediaActiveFactory =\n    (activeType: MediaType): IsMediaActive =>\n    (toCheck) => {\n        return activeType in mediaByOrder\n            ? mediaByOrder[activeType as MediaType] - mediaByOrder[toCheck] >= 0\n            : false;\n    };\n\nconst mediaOrder = ['s', 'm', 'l', 'xl', 'xxl', 'xxxl'] as const;\n\nexport const getClosestMediaPropsFactory =\n    (currentActive: MediaType) =>\n    <T>(medias: MediaPartial<T> = {}): T | undefined => {\n        if (!currentActive) {\n            return undefined;\n        }\n\n        let candidate = currentActive;\n\n        while (candidate) {\n            if (medias[candidate]) {\n                return medias[candidate];\n            }\n\n            candidate = mediaOrder[mediaByOrder[candidate] - 1];\n        }\n\n        return undefined;\n    };\n\nexport const makeCssMod = (space: Space | ColSize): string => {\n    return space in CSS_SIZE_EXCEPTION ? CSS_SIZE_EXCEPTION[space] : String(space);\n};\n"]}